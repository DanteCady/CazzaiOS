{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SCREEN_WIDTH = Dimensions.get('window').width;\nvar SideDrawer = function SideDrawer(_ref) {\n  var onCloseDrawer = _ref.onCloseDrawer;\n  var navigation = useNavigation();\n  var navigateToScreen = function navigateToScreen(screenName) {\n    navigation.navigate(screenName);\n    onCloseDrawer();\n  };\n  return _jsxs(View, {\n    style: styles.drawerContainer,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.closeButton,\n      onPress: onCloseDrawer,\n      children: _jsx(Text, {\n        style: styles.closeButtonText,\n        children: \"Close\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.menuItem,\n      onPress: function onPress() {\n        return navigateToScreen('Properties');\n      },\n      children: _jsx(Text, {\n        style: styles.menuItemText,\n        children: \"Properties\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.menuItem,\n      onPress: function onPress() {\n        return navigateToScreen('Tenants');\n      },\n      children: _jsx(Text, {\n        style: styles.menuItemText,\n        children: \"Tenants\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.menuItem,\n      onPress: function onPress() {\n        return navigateToScreen('Documents');\n      },\n      children: _jsx(Text, {\n        style: styles.menuItemText,\n        children: \"Documents\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.menuItem,\n      onPress: function onPress() {\n        return navigateToScreen('Settings');\n      },\n      children: _jsx(Text, {\n        style: styles.menuItemText,\n        children: \"Settings\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  drawerContainer: {\n    flex: 1,\n    backgroundColor: 'white',\n    width: SCREEN_WIDTH * 0.7,\n    paddingTop: 50\n  },\n  closeButton: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc'\n  },\n  closeButtonText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'black'\n  },\n  menuItem: {\n    paddingHorizontal: 20,\n    paddingVertical: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc'\n  },\n  menuItemText: {\n    fontSize: 16,\n    color: 'black'\n  }\n});\nexport default SideDrawer;","map":{"version":3,"names":["React","View","Text","TouchableOpacity","StyleSheet","Dimensions","useNavigation","jsx","_jsx","jsxs","_jsxs","SCREEN_WIDTH","get","width","SideDrawer","_ref","onCloseDrawer","navigation","navigateToScreen","screenName","navigate","style","styles","drawerContainer","children","closeButton","onPress","closeButtonText","menuItem","menuItemText","create","flex","backgroundColor","paddingTop","paddingHorizontal","paddingVertical","borderBottomWidth","borderBottomColor","fontSize","fontWeight","color"],"sources":["D:/Apps/Mobile/CazzaiOS/CazzaiOS/src/components/composite/Dashboard/landlord/sideDraw.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet, Dimensions } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native'; // Import useNavigation from React Navigation\r\n\r\nconst SCREEN_WIDTH = Dimensions.get('window').width;\r\n\r\nconst SideDrawer = ({ onCloseDrawer }) => {\r\n  const navigation = useNavigation(); // Get the navigation object\r\n\r\n  const navigateToScreen = (screenName) => {\r\n    navigation.navigate(screenName); // Navigate to the selected screen\r\n    onCloseDrawer(); // Close the drawer\r\n  };\r\n\r\n  return (\r\n    <View style={styles.drawerContainer}>\r\n      <TouchableOpacity style={styles.closeButton} onPress={onCloseDrawer}>\r\n        <Text style={styles.closeButtonText}>Close</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style={styles.menuItem} onPress={() => navigateToScreen('Properties')}>\r\n        <Text style={styles.menuItemText}>Properties</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style={styles.menuItem} onPress={() => navigateToScreen('Tenants')}>\r\n        <Text style={styles.menuItemText}>Tenants</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style={styles.menuItem} onPress={() => navigateToScreen('Documents')}>\r\n        <Text style={styles.menuItemText}>Documents</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style={styles.menuItem} onPress={() => navigateToScreen('Settings')}>\r\n        <Text style={styles.menuItemText}>Settings</Text>\r\n      </TouchableOpacity>\r\n      {/* Add more menu items as needed */}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  drawerContainer: {\r\n    flex: 1,\r\n    backgroundColor: 'white',\r\n    width: SCREEN_WIDTH * 0.7, // Adjust the width as needed\r\n    paddingTop: 50, // Add top padding to avoid overlapping with status bar\r\n  },\r\n  closeButton: {\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n  },\r\n  closeButtonText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n  },\r\n  menuItem: {\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n  },\r\n  menuItemText: {\r\n    fontSize: 16,\r\n    color: 'black',\r\n  },\r\n});\r\n\r\nexport default SideDrawer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}